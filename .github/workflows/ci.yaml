name: CI

"on": [push]

jobs:
  build:
    runs-on: ubuntu-latest

    # Only do Docker builds of ticket branches and tagged releases.
    if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/tickets/')

    steps:
      - uses: actions/checkout@v4

      - name: Define the Docker tag
        id: vars
        run: echo ::set-output name=tag::$(scripts/docker-tag.sh "$GITHUB_REF")

      - name: Print the tag
        id: print
        run: echo ${{ steps.vars.outputs.tag }}

      - name: Build and test
        run: ./scripts/build-war.sh

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the TAP server image
        uses: docker/build-push-action@v4
        with:
          context: docker/tap
          push: true
          file: docker/tap/Dockerfile
          tags: |
            ghcr.io/lsst-sqre/tap-postgres-service:${{ steps.vars.outputs.tag }}

      - name: Build and push the UWS database image
        uses: docker/build-push-action@v4
        with:
          context: docker/uws
          push: true
          file: docker/uws/Dockerfile
          tags: |
            ghcr.io/lsst-sqre/tap-postgres-uws:${{ steps.vars.outputs.tag }}

      - name: Build and push the mock postgres image
        uses: docker/build-push-action@v4
        with:
          context: docker/cadc-postgresql-dev
          push: true
          file: docker/cadc-postgresql-dev/Dockerfile.pg12
          tags: |
            ghcr.io/lsst-sqre/tap-postgres-db:${{ steps.vars.outputs.tag }}
